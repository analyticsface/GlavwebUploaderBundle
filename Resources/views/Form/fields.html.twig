{% block glavweb_uploader_dropzone_widget %}
    <style>
        {% if thumbnailWidth %}
        .glavweb {
            height: {{ thumbnailHeight  }}px;
            position: relative;
        }
        .glavweb-outer {
            width:{{ thumbnailWidth  }}px;
            height:{{ thumbnailHeight  }}px;
            position: absolute;
            overflow: hidden;
        }

        .glavweb-inner {
            height: 500%;
            width: 100%;
            position: absolute;
            top: -200%;
        }

        .glavweb-img {
            display: block;
            position: absolute !important;
            width: 100%;
            height: auto;
            left: 0; top: 0; bottom: 0; right: 0;
            margin: auto;
        }
        {% endif %}

        .dz-details__img {
            position: relative;
        }
         .dz-preview {
            padding: 0 !important;
             width: {% if thumbnailWidth %}{{ thumbnailWidth  }}px {% else %}100%{% endif %} !important;

             display: block;
             float: left;
             margin-right: 30px;
        }

         .dz-progress {
             display: none !important;
         }
        .dz-button._remove {
            position: absolute;
            top: 0;
            right: 0;
            z-index: 1000;
        }
        .dz-rename.btn,
        .dz-rename.btn:hover,
        .dz-rename.btn:focus {
            background: #fff;
            box-shadow: none;
            border: none;
        }

        .dz-filename-wr {
            display: block;
            position: relative;
            z-index: 1;
            height: 25px;
            overflow: hidden;
        }

        .dz-button._rename {
            position: absolute;
            top: -3px;
            right: 0;
            z-index: 3;
        }

        .js-file-upload-hide {
            display: none;
        }

        .js-reached-limit-message {
            color: #ff0000;
        }
        .uploading-error {
            margin: 20px 0;
        }
        .uploading-error__text {
            color: #ff0000;
        }

        .hidden {
            display: none;
        }
    </style>

    <div class="glavweb-uploader-dropzone {{ uploaderClass }}">
        <input type="hidden" name="_glavweb_uploader_request_id" value="{{ requestId }}">
        <input type="hidden" name="_glavweb_uploader_sorted_array[{{ type }}]" id = "dz-sorted-array" value="">

        <div class="dz ">

            <div class="js-glavweb-uploader-dropzone-main">
                {% if useForm %}
                    {% include viewFormTpl %}
                {% endif %}
            </div>

            {% if useLink %}
                {% include viewLinkTpl %}
            {% endif %}

            <div class="js-no-uploading-error uploading-error hidden">
                <span class="js-no-uploading-error-text uploading-error__text"></span>
            </div>

            <script src="{{ asset('bundles/glavwebuploader/js/Sortable.js') }}"></script>

            <div id="previews" class="previews clearfix">
               {% include uploadedFilesTpl with {'files': files} %}
            </div>

            <script>
                var imgPreview = document.getElementById('previews');
                var sortableImgPreview = Sortable.create(imgPreview, {
                    animation: 200,
                    onSort: function (/**Event*/evt) {
                        formSortedArray();
                    }
                });

                function formSortedArray(){
                    $('#dz-sorted-array').val('');

                    var dzSortedArray = [];
                    $('.dz-preview').each(function(){
                        dzSortedArray.push($(this).data('id'));
                    });

                    $('#dz-sorted-array').val(dzSortedArray.join(','));
                }
            </script>
        </div>
    </div>

    {% block glavweb_uploader_dropzone_widget__madal_windows %}
        {% include 'GlavwebUploaderBundle:Form:view-modal-remove.html.twig' %}
        {% include 'GlavwebUploaderBundle:Form:view-modal-rename.html.twig' %}
        {% include 'GlavwebUploaderBundle:Form:view-modal-error.html.twig' %}
        {% include 'GlavwebUploaderBundle:Form:view-modal-error-format.html.twig' %}
        {% include 'GlavwebUploaderBundle:Form:view-modal-error-default.html.twig' %}
    {% endblock %}

    {% block glavweb_uploader_dropzone_widget__stylesheet %}
        <link rel="stylesheet" href="{{ asset('bundles/glavwebuploader/css/dropzone.css') }}" type="text/css" media="screen"/>

    {% endblock %}

    {% block glavweb_uploader_dropzone_widget__script %}
        <script src="{{ asset('bundles/glavwebuploader/js/dropzone.js') }}"></script>

        <script type="text/javascript">

            var previewTemplate = $('#template').html();
            $('#template').remove();

            function validURL(str) {
                var regex = /^(https?:\/\/)?((([a-z\d]([a-z\d-]*[a-z\d])*)\.)+[a-z]{2,}|((\d{1,3}\.){3}\d{1,3}))(\:\d+)?(\/[-a-z\d%_.~+]*)*(\?[;&a-z\d%_.~+=-]*)?(\#[-a-z\d_]*)?$/i;
                if(!regex .test(str)) {
                    return false;
                } else {
                    return true;
                }
            }

            {% if useForm %}

            var maxFiles = {{ maxFiles }};

            var myDropzone = new Dropzone('.js-glavweb-uploader-dropzone-main', { // Make the whole body a dropzone
                url: "{{ path('glavweb_uploader_upload', {context: type}) }}", // Set the url
                thumbnailWidth: {% if thumbnailWidth %}{{ thumbnailWidth }}{% else %} null{% endif %},
                thumbnailHeight: {% if thumbnailHeight %}{{ thumbnailHeight }}{% else %} null{% endif %},
                parallelUploads: 20,
                previewTemplate: previewTemplate,
                autoQueue: true, // Make sure the files aren't queued until manually added
                autoProcessQueue: true,
                previewsContainer: "#previews", // Define the container to display the previews
                clickable: ".js-file-upload", // Define the element that should be used as click trigger to select files.
                maxFilesize: {{ maxSize }},
                maxFiles: {{ maxFiles }},
                acceptedFiles: ".png, .jpg",
                error: function(file, errorMessage) {
                    var message = errorMessage;

                    if (typeof errorMessage == "string" && errorMessage.length > 200) {
                        message = 'При загрузке произошла ошибка.';
                        this.files.pop();
                    }

                    if (file.size > {{ maxSize }}*1024*1024) {
                        $('#modalErrorDefault ').
                        $('#modalErrorDefault').modal();
                        return false;
                    } else {
                        {% if isShowErrorPopup %}
                            $('#modalErrorDefault #modalRemoveDefaultHeadLabel').text('');
                            $('#modalErrorDefault #modalRemoveDefaultBodyLabel').text(message);
                            $('#modalErrorDefault').modal();
                        {% else %}
                            $('.js-no-uploading-error').removeClass('hidden').find('.js-no-uploading-error-text').text(message);
                        {% endif %}


                        $(file.previewTemplate).addClass('hidden-upload-item');
                    }
                },
                complete: function(file) {
                    $('.js-article-preloader').addClass('hidden');
                    if (file.size > 4*1024*1024) {
                        $(file.previewTemplate).addClass('hidden-upload-item');
                        return false;
                    }
                },
                dictDefaultMessage: "Файлы были загружены",
                dictFallbackMessage: "Ваш браузер не поддерживает drag'n'drop загрузку.",
                dictFileTooBig: "Размер файла слишком большой.",
                dictInvalidFileType: "Вы не можете загружать файлы данного формата.",
                dictResponseError: "Скорее всего у вас включен блокировщик рекламы. Отключите его для данного сайта.",
                dictCancelUpload: "Отмена загрузки",
                dictCancelUploadConfirmation: "Вы действительно хотите отменить загрузку?",
                dictRemoveFile: "Удаление файла",
                dictRemoveFileConfirmation: null,
                dictMaxFilesExceeded: "Вы не можете загрузить больше файлов.",
            });

            {% for media in files %}
                {% set imgSrc = media|glavweb_uploader_thumbnail %}
                addFileToMyDropzone("{{ media.name }}", {{ media.id }}, "{{ imgSrc }}");
            {% endfor %}

            function addFileToMyDropzone(mediaName, mediaId, mediaSrc) {
                var mockFile = { name: mediaName, size: 0, accepted: true};
                myDropzone.emit("addedfile", mockFile);
                myDropzone.emit("thumbnail", mockFile, mediaSrc);

                $(mockFile.previewTemplate).attr('data-id', mediaId);
                $(mockFile.previewTemplate).attr('data-src', mediaSrc);
                $(mockFile.previewTemplate).attr('id', 'dz-preview-'+mediaId);

                mockFile.response = {id: mediaId, contentPath: mediaSrc}

                myDropzone.files.push(mockFile);
            }

            myDropzone.on("sending", function (file, xhr, formData) {
                $('.js-article-preloader').removeClass('hidden');
                formData.append('_glavweb_uploader_request_id', '{{ requestId }}');
            });

            myDropzone.on("success", function (file, response) {
                file.response = response;
                $(file.previewTemplate).attr('data-id', response.id);
                $(file.previewTemplate).attr('data-src', response.contentPath);
                $(file.previewTemplate).attr('id', 'dz-preview-' + response.id);
                //$(file.previewTemplate).find('.dz-filename span').text('');
                formSortedArray();
                $('.js-no-uploading-error').addClass('hidden');
            });

            myDropzone.on("removedfile", function (file) {
                var id = file.response.id;

                if (id !== undefined) {
                    url = "{{ deleteUrl }}";
                    $.post(url, {
                        id: id,
                        request_id: "{{ requestId }}"
                    });
                }

                formSortedArray();

                $('.js-no-uploading-error').addClass('hidden');
            });

            {% endif %}

            $(document).ready(function () {
                // rename
                $('#previews').on('click', '.dz-rename', function () {
                    var preview = $(this).closest('.dz-preview');
                    var fileId = preview.data('id');

                    var name = preview.find('.dz-filename').text().trim();
                    var description = preview.find('.dz-description').text().trim();

                    $('#fileName').val(name);
                    $('#description').val(description);
                    $('.do-rename-file').data('file-id', fileId);
                    $('#modalRenameFile').modal();
                });

                $('.do-rename-file').click(function () {
                    var button = $(this);
                    var fileId = button.data('file-id');

                    if (fileId) {
                        url = "{{ renameUrl }}";
                        name = $('#fileName').val();
                        description = $('#description').val();

                        $.post(url, {
                            id: fileId,
                            request_id: "{{ requestId }}",
                            name: name,
                            description: description
                        }, function (response) {
                            if (response.success) {
                                var preview = $('#dz-preview-' + fileId);
                                preview.find('.dz-filename span').text(name);
                                preview.find('.dz-description span').text(description);
                            }
                        });
                    }

                    $('#modalRenameFile').modal('hide');
                });

                {% if useLink %}
                $('.js-uploadlink-button').click(function () {
                    var value = $('.js-uploader-link-control').val();
                    $('.js-uploader-link-control').val('');
                    var button = $('.js-uploadlink-button');
                    var uploadDir = '{{ uploadDir }}';

                    if(value) {
                        if (  myDropzone.files.length < {{ maxFiles }}) {
                            $('js-no-uploading-images-error').addClass('hidden');
                            if ( validURL(value)  ) {
                                $('.js-uploader-link-error').addClass('hidden');
                                $('.js-uploader-link-load').removeClass('hidden');

                                $.ajax('{{ path('glavweb_uploader_uploadlink', {context: type}) }}', {
                                    'data': {
                                        'file_link': value,
                                        '_glavweb_uploader_request_id': '{{ requestId }}'
                                    },
                                    'dataType': 'json',
                                    'complete': function (response) {
                                        var json = response.responseJSON;

                                        if (response.status == 200) {

                                            var fileId = json['id'];
                                            var thumbnailPath = json['thumbnail_path'];
                                            var name = json['name'];
                                            var mediaSrc = uploadDir + '/' + thumbnailPath;
                                            var template = $(previewTemplate);

                                            var mockFile = {name: name, size: 0, accepted: true};
                                            myDropzone.emit("addedfile", mockFile);
                                            myDropzone.emit("thumbnail", mockFile, mediaSrc);

                                            template.attr('data-id', fileId);
                                            template.attr('data-src', mediaSrc);
                                            template.attr('id', 'dz-preview-' + fileId);

                                            template.find('.dz-filename span').text(name);

                                            if (thumbnailPath) {
                                                template.find('.dz-details img').attr('alt', name);
                                                template.find('.dz-details img').attr('src', mediaSrc);
                                            }

                                            mockFile.response = {id: fileId, contentPath: mediaSrc}
                                            myDropzone.files.push(mockFile);

                                            $('.js-uploader-link-control').val('');
                                            $('.js-no-uploading-error').addClass('hidden');

                                        } else  {
                                            $('.js-uploader-link-control').val(value);
                                            $('.js-uploader-link-error').removeClass('hidden');
                                        }

                                        $("#previews").scrollTop($("#previews")[0].scrollHeight);
                                        $('.js-uploader-link-load').addClass('hidden');
                                    }
                                });

                             } else {
                                $('.js-uploader-link-control').val(value);
                                $('.js-uploader-link-error').removeClass('hidden');
                            }
                        } else {
                            $('js-no-uploading-images-error').removeClass('hidden');
                        }
                    } else {
                        $('.js-uploader-link-error').addClass('hidden');
                    }
                });
                {% endif %}
            });
        </script>
    {% endblock %}
{% endblock %}